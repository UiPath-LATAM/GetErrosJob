<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.inQtdDay="2" this:Main.inFolderName="Shared" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="outProcessName" Type="OutArgument(sd:DataTable)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="inQtdDay" Type="InArgument(x:Int32)" />
    <x:Property Name="inFolderName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>981,3718</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="33">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="110">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetErrorsJobProcess" sap:VirtualizedContainerService.HintSize="944,3653" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" Name="oFailedJobs" />
      <Variable x:TypeArguments="sd:DataTable" Name="dictProc" />
      <Variable x:TypeArguments="sd:DataRow" Name="dtRow" />
      <Variable x:TypeArguments="x:String" Name="strdate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="InitializingProcess" sap:VirtualizedContainerService.HintSize="882,141" sap2010:WorkflowViewState.IdRef="LogMessage_2">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">"Get ErrorJob Process started."</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:GetJobs Top="{x:Null}" DisplayName="GetErrorJobs" sap:VirtualizedContainerService.HintSize="882,467" sap2010:WorkflowViewState.IdRef="GetJobs_1">
      <ui:GetJobs.Filter>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_97" xml:space="preserve">"(State eq 'Stopped' or State eq 'Faulted') and StartTime ge " + DateTime.Today.AddDays(-inQtdDay).ToString("yyyy-MM-dd") +  " and StartTime le " + DateTime.Today.ToString("yyyy-MM-dd") + " and Source ne 'Manual'"</CSharpValue>
        </InArgument>
      </ui:GetJobs.Filter>
      <ui:GetJobs.FolderPath>
        <InArgument x:TypeArguments="x:String">
          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">inFolderName</CSharpValue>
        </InArgument>
      </ui:GetJobs.FolderPath>
      <ui:GetJobs.Result>
        <OutArgument x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)">
          <CSharpReference x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">
            <CSharpReference.Result>
              <OutArgument x:TypeArguments="Location(scg:IEnumerable(ui:OrchestratorJob))" />
            </CSharpReference.Result>oFailedJobs</CSharpReference>
        </OutArgument>
      </ui:GetJobs.Result>
      <ui:GetJobs.Skip>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetJobs.Skip>
      <ui:GetJobs.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetJobs.TimeoutMS>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetJobs>
    <Assign sap:VirtualizedContainerService.HintSize="882,65" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)">
          <CSharpReference x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">oFailedJobs</CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)">
          <CSharpValue x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_104" xml:space="preserve">from s in oFailedJobs
orderby s.StartTime descending
select s</CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="outProcessName = new DataTable();&#xA;outProcessName.Columns.Add(new DataColumn(&quot;nome&quot;));&#xA;outProcessName.Columns.Add(new DataColumn(&quot;dataExec&quot;));" DisplayName="CreatingDataTableResults" sap:VirtualizedContainerService.HintSize="882,215" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="outProcessName">
          <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">outProcessName</CSharpReference>
        </InOutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:ForEach x:TypeArguments="ui:OrchestratorJob" CurrentIndex="{x:Null}" DisplayName="NavigatingThroughErrorJobs" sap:VirtualizedContainerService.HintSize="882,2313" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="ui:OrchestratorJob">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:OrchestratorJob" Name="currentOrchestratorJob" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="804,2052" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If DisplayName="ChecEligiblekErrorJobs" sap:VirtualizedContainerService.HintSize="742,1941" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">dtRow == null || !currentOrchestratorJob.ProcessName.Equals(dtRow["nome"])</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Body-ChecEligiblekErrorJobs" sap:VirtualizedContainerService.HintSize="664,1665" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" Name="oSucJobs" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:GetJobs DisplayName="GetSuccessJob" sap:VirtualizedContainerService.HintSize="602,467" sap2010:WorkflowViewState.IdRef="GetJobs_2">
                    <ui:GetJobs.Filter>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_92" xml:space="preserve">"(State eq 'Successful' or State eq 'Running') and StartTime ge " + DateTime.Today.AddDays(-inQtdDay) .ToString("yyyy-MM-dd") +  " and StartTime le " + DateTime.Today.ToString("yyyy-MM-dd") + " and ReleaseName eq '" + currentOrchestratorJob.ProcessName + "'"</CSharpValue>
                      </InArgument>
                    </ui:GetJobs.Filter>
                    <ui:GetJobs.FolderPath>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_94">inFolderName</CSharpValue>
                      </InArgument>
                    </ui:GetJobs.FolderPath>
                    <ui:GetJobs.Result>
                      <OutArgument x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)">
                        <CSharpReference x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">
                          <CSharpReference.Result>
                            <OutArgument x:TypeArguments="Location(scg:IEnumerable(ui:OrchestratorJob))" />
                          </CSharpReference.Result>oSucJobs</CSharpReference>
                      </OutArgument>
                    </ui:GetJobs.Result>
                    <ui:GetJobs.Skip>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:GetJobs.Skip>
                    <ui:GetJobs.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:GetJobs.TimeoutMS>
                    <ui:GetJobs.Top>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:GetJobs.Top>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:GetJobs>
                  <Assign sap:VirtualizedContainerService.HintSize="602,65" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)">
                        <CSharpReference x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">oSucJobs</CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)">
                        <CSharpValue x:TypeArguments="scg:IEnumerable(ui:OrchestratorJob)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_105" xml:space="preserve">from s in oSucJobs
orderby s.StartTime descending
select s</CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <If DisplayName="CheckSuccessRepliedJob" sap:VirtualizedContainerService.HintSize="602,942" sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">oSucJobs.Count() == 0</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Body-CheckSuccessRepliedJob" sap:VirtualizedContainerService.HintSize="524,666" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="OutputPreparation" sap:VirtualizedContainerService.HintSize="462,374" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">
                                <CSharpReference x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">dtRow</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">
                                <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_69">outProcessName.NewRow()</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">
                                <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">dtRow["nome"]</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">currentOrchestratorJob.ProcessName</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap:VirtualizedContainerService.HintSize="400,61" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">
                                <CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">dtRow["dataExec"]</CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">
                                <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_106">currentOrchestratorJob.StartTime.ToString()</CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                        <ui:AddDataRow ArrayRow="{x:Null}" DisplayName="PreparingDataTableResults" sap:VirtualizedContainerService.HintSize="462,141" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                          <ui:AddDataRow.DataRow>
                            <InArgument x:TypeArguments="sd:DataRow">
                              <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">dtRow</CSharpValue>
                            </InArgument>
                          </ui:AddDataRow.DataRow>
                          <ui:AddDataRow.DataTable>
                            <InOutArgument x:TypeArguments="sd:DataTable">
                              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">outProcessName</CSharpReference>
                            </InOutArgument>
                          </ui:AddDataRow.DataTable>
                        </ui:AddDataRow>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.Values>
        <InArgument x:TypeArguments="sc:IEnumerable">
          <CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_99">oFailedJobs</CSharpValue>
        </InArgument>
      </ui:ForEach.Values>
    </ui:ForEach>
    <ui:LogMessage DisplayName="FinishingProcess" sap:VirtualizedContainerService.HintSize="882,141" sap2010:WorkflowViewState.IdRef="LogMessage_1">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">"Get ErrorJob Process Finished."</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>